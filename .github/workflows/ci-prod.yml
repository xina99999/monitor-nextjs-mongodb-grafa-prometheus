name: CI - Production (Docker Build & Deploy to AWS)

on:
  push:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: nhan-monitor
      CONTAINER_NAME: nhan-monitor-prod

    steps:
      # ðŸ§© 1. Láº¥y code
      - name: Checkout code
        uses: actions/checkout@v4

      # ðŸ§© 2. Táº¡o file .env tá»« GitHub Secrets
      - name: Create .env file from secrets
        run: |
          echo "MONGODB_URL=${{ secrets.MONGODB_URL_PROD }}" >> .env
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL_PROD }}" >> .env
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET_PROD }}" >> .env
          echo "NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME=${{ secrets.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME_PROD }}" >> .env
          echo "NEXT_PUBLIC_CLOUDINARY_API_KEY=${{ secrets.NEXT_PUBLIC_CLOUDINARY_API_KEY_PROD }}" >> .env
          echo "CLOUDINARY_SECRET=${{ secrets.CLOUDINARY_SECRET_PROD }}" >> .env

      # ðŸ§© 3. Login Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # ðŸ§© 4. Build Docker image
      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:prod .

      # ðŸ§© 5. Push image lÃªn Docker Hub
      - name: Push image to Docker Hub
        run: |
          docker tag $IMAGE_NAME:prod ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:prod
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:prod

      # ðŸ§© 6. Deploy lÃªn AWS EC2 qua SSH key
      - name: Deploy to AWS EC2 via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "ðŸ”„ Pulling latest image from Docker Hub..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:prod

            echo "ðŸ§¹ Removing old containers..."
            docker compose -f /home/ubuntu/app/docker-compose.yml down || true

            echo "ðŸš€ Starting new containers..."
            cd /home/ubuntu/app
            docker compose -f docker-compose.yml up -d --build
